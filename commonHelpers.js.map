{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('button[data-start]');\nconst datDays = document.querySelector('[data-days]');\nconst datHours = document.querySelector('[data-hours]');\nconst datMinutes = document.querySelector('[data-minutes]');\nconst datSeconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = [];\n\nclass SelectDate {\n  constructor(convertMs) {\n    this.intervalId = null;\n    this.selectTime = convertMs;\n  }\n  start() {\n    this.intervalId = setInterval(() => {\n     const diff = userSelectedDate - Date.now();      \n      datDays.textContent = format(this.selectTime(diff).days); \n      datHours.textContent = format(this.selectTime(diff).hours);\n      datMinutes.textContent = format(this.selectTime(diff).minutes);\n      datSeconds.textContent = format(this.selectTime(diff).seconds);\n    }, 1000);      \n  }\n  clearInter() {\n    clearInterval(this.intervalId);\n  } \n}\nfunction format(num) {\n  return num.toString().padStart(2, '0');\n}\n\nstartBtn.addEventListener('click', () => {\n  selectDate.start();\n});\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n     userSelectedDate = selectedDates[0];\n    console.log(selectedDates[0]); \n    \n    if (userSelectedDate < Date.now()) {\n      startBtn.disabled = true;\n      iziToast.show({       \n          message: `Please choose a date in the future`,\n          position: 'topRight',\n          backgroundColor: 'red',\n          messageColor: 'white', \n       });     \n    } else {\n      startBtn.disabled = false;\n     }       \n  },\n};\n\nconst flatTime = new flatpickr('#datetime-picker', options);\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst selectDate = new SelectDate(convertMs);\n\n \n\n"],"names":["startBtn","datDays","datHours","datMinutes","datSeconds","userSelectedDate","SelectDate","convertMs","diff","format","num","selectDate","options","selectedDates","iziToast","flatpickr","ms","days","hours","minutes","seconds"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EAAmB,CAAA,EAEvB,MAAMC,CAAW,CACf,YAAYC,EAAW,CACrB,KAAK,WAAa,KAClB,KAAK,WAAaA,CACnB,CACD,OAAQ,CACN,KAAK,WAAa,YAAY,IAAM,CACnC,MAAMC,EAAOH,EAAmB,KAAK,IAAG,EACvCJ,EAAQ,YAAcQ,EAAO,KAAK,WAAWD,CAAI,EAAE,IAAI,EACvDN,EAAS,YAAcO,EAAO,KAAK,WAAWD,CAAI,EAAE,KAAK,EACzDL,EAAW,YAAcM,EAAO,KAAK,WAAWD,CAAI,EAAE,OAAO,EAC7DJ,EAAW,YAAcK,EAAO,KAAK,WAAWD,CAAI,EAAE,OAAO,CAC9D,EAAE,GAAI,CACR,CACD,YAAa,CACX,cAAc,KAAK,UAAU,CAC9B,CACH,CACA,SAASC,EAAOC,EAAK,CACnB,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC,CAEAV,EAAS,iBAAiB,QAAS,IAAM,CACvCW,EAAW,MAAK,CAClB,CAAC,EAED,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACpBR,EAAmBQ,EAAc,GAClC,QAAQ,IAAIA,EAAc,EAAE,EAExBR,EAAmB,KAAK,OAC1BL,EAAS,SAAW,GACpBc,EAAS,KAAK,CACV,QAAS,qCACT,SAAU,WACV,gBAAiB,MACjB,aAAc,OACxB,CAAQ,GAEFd,EAAS,SAAW,EAEvB,CACH,EAEiB,IAAIe,EAAU,mBAAoBH,CAAO,EAG1D,SAASL,EAAUS,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,MAAMT,EAAa,IAAIL,EAAWC,CAAS"}